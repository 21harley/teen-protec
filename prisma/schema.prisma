generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ====================== ENUMS ======================
enum TestStatus {
  NO_INICIADO
  EN_PROGRESO
  COMPLETADO
}

enum PesoPreguntaTipo {
  SIN_VALOR
  IGUAL_VALOR
  BAREMO
}

// ====================== MODELOS PRINCIPALES ======================
model Usuario {
  id                       Int             @id @default(autoincrement())
  nombre                   String
  email                    String          @unique
  cedula                   String          @unique
  password                 String
  password_iv              String
  fecha_nacimiento         DateTime
  sexo                     String?
  id_tipo_usuario          Int
  id_psicologo             Int?
  authToken                String?
  authTokenExpiry          DateTime?
  resetPasswordToken       String?         @unique
  resetPasswordTokenExpiry DateTime?

  // Relaciones
  tipo_usuario             TipoUsuario     @relation(fields: [id_tipo_usuario], references: [id])
  adolecente               Adolecente?
  psicologo                Psicologo?
  tests                    Test[]          @relation("TestUsuario")
  respuestas               Respuesta[]
  pacientes                Usuario[]       @relation("PacientesPsicologo", fields: [], references: [])
  psicologoPacientes       Usuario?        @relation("PacientesPsicologo", fields: [id_psicologo], references: [id])
  alarmas                  Alarma[]        @relation("usuario")

  @@index([email])
  @@index([cedula])
  @@index([id_psicologo])
}

model Tutor {
  id                Int          @id @default(autoincrement())
  cedula_tutor      String       @unique
  nombre_tutor      String
  profesion_tutor   String?
  telefono_contacto String?
  correo_contacto   String?
  sexo              String?
  parentesco        String?
  adolecentes       Adolecente[]

  @@index([cedula_tutor])
}

model Test {
  id                  Int              @id @default(autoincrement())
  nombre              String?
  estado              TestStatus       @default(NO_INICIADO)
  peso_preguntas      PesoPreguntaTipo @default(SIN_VALOR)
  config_baremo       Json?
  valor_total         Float?
  fecha_creacion      DateTime         @default(now())
  fecha_ultima_respuesta DateTime?
  id_psicologo        Int?
  id_usuario          Int?

  // Relaciones
  psicologo           Psicologo?       @relation("TestPsicologo", fields: [id_psicologo], references: [id_usuario])
  usuario             Usuario?         @relation("TestUsuario", fields: [id_usuario], references: [id])
  preguntas           Pregunta[]
  respuestas          Respuesta[]

  @@index([id_psicologo])
  @@index([id_usuario])
}

model Pregunta {
  id             Int          @id @default(autoincrement())
  id_test        Int
  id_tipo        Int
  texto_pregunta String
  orden          Int
  obligatoria    Boolean      @default(false)
  peso           Float?
  baremo_detalle Json?
  placeholder    String?
  min            Int?
  max            Int?
  paso           Int?

  // Relaciones
  test           Test         @relation(fields: [id_test], references: [id])
  tipo           TipoPregunta @relation(fields: [id_tipo], references: [id])
  opciones       Opcion[]
  respuestas     Respuesta[]

  @@index([id_test])
}

// ====================== MODELOS SECUNDARIOS ======================
model TestPlantilla {
  id                  Int              @id @default(autoincrement())
  id_psicologo        Int
  nombre              String
  estado              TestStatus       @default(NO_INICIADO)
  peso_preguntas      PesoPreguntaTipo @default(SIN_VALOR)
  config_baremo       Json?
  valor_total         Float?
  fecha_creacion      DateTime         @default(now())

  // Relaciones
  psicologo           Psicologo        @relation(fields: [id_psicologo], references: [id_usuario])
  preguntas           PreguntaPlantilla[]

  @@index([id_psicologo])
}

model PreguntaPlantilla {
  id             Int          @id @default(autoincrement())
  id_test        Int
  id_tipo        Int
  texto_pregunta String
  orden          Int
  obligatoria    Boolean      @default(false)
  peso           Float?
  baremo_detalle Json?
  placeholder    String?
  min            Int?
  max            Int?
  paso           Int?

  // Relaciones
  test           TestPlantilla @relation(fields: [id_test], references: [id])
  tipo           TipoPregunta  @relation(fields: [id_tipo], references: [id])
  opciones       OpcionPlantilla[]

  @@index([id_test])
}

// ====================== MODELOS SIN CAMBIOS ======================
model TipoUsuario {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique
  menu        Json
  usuarios    Usuario[]
  tiposAlerta TipoAlerta[]
}

model TipoPregunta {
  id          Int          @id @default(autoincrement())
  nombre      String       @unique
  descripcion String?
  tipo_respuesta String
  preguntas   Pregunta[]
  preguntasPlantilla PreguntaPlantilla[]
}

model TipoAlerta {
  id              Int       @id @default(autoincrement())
  nombre          String    @unique
  url_destino     String?
  id_tipo_usuario Int
  alarmas         Alarma[]
  tipo_usuario    TipoUsuario @relation(fields: [id_tipo_usuario], references: [id])
}

model Adolecente {
  id_usuario Int     @unique
  id_tutor   Int?
  tutor      Tutor?  @relation(fields: [id_tutor], references: [id])
  usuario    Usuario @relation(fields: [id_usuario], references: [id])
}

model Alarma {
  id             Int       @id @default(autoincrement())
  id_usuario     Int?
  id_tipo_alerta Int?
  mensaje        String
  fecha_creacion DateTime  @default(now())
  fecha_vista    DateTime?
  vista          Boolean   @default(false)
  
  // Relaciones
  usuario        Usuario?  @relation("usuario", fields: [id_usuario], references: [id])
  tipo_alerta    TipoAlerta? @relation(fields: [id_tipo_alerta], references: [id])

  // Índices
  @@index([id_usuario])
  @@index([fecha_creacion])
  @@index([vista])
}

model Psicologo {
  id_usuario         Int                  @unique
  numero_de_titulo   String?
  nombre_universidad String?
  monto_consulta     Float?
  telefono_trabajo   String?
  
  // Relaciones
  usuario            Usuario              @relation(fields: [id_usuario], references: [id])
  redes_sociales     RedSocialPsicologo[]
  tests              Test[]               @relation("TestPsicologo")
  plantillas         TestPlantilla[]

  // Índices
  @@index([numero_de_titulo])
}

model Opcion {
  id           Int       @id @default(autoincrement())
  id_pregunta  Int
  texto        String
  valor        String
  orden        Int
  es_otro      Boolean   @default(false)

  // Relaciones
  pregunta     Pregunta  @relation(fields: [id_pregunta], references: [id])
  respuestas   Respuesta[]

  // Índices
  @@index([id_pregunta])
}

model Respuesta {
  id              Int       @id @default(autoincrement())
  id_test         Int
  id_pregunta     Int
  id_usuario      Int
  id_opcion       Int?
  texto_respuesta String?
  valor_rango     Int?
  fecha           DateTime  @default(now())
  
  // Relaciones
  test            Test      @relation(fields: [id_test], references: [id])
  pregunta        Pregunta  @relation(fields: [id_pregunta], references: [id])
  usuario         Usuario   @relation(fields: [id_usuario], references: [id])
  opcion          Opcion?   @relation(fields: [id_opcion], references: [id])
  
  // Índices
  @@index([id_test, id_usuario])
  @@index([id_pregunta])
  @@index([fecha])
}

model RedSocialPsicologo {
  id           Int        @id @default(autoincrement())
  id_psicologo Int
  nombre_red   String
  url_perfil   String
  
  // Relaciones
  psicologo    Psicologo  @relation(fields: [id_psicologo], references: [id_usuario])

  // Restricciones
  @@unique([id_psicologo, nombre_red])
}

model OpcionPlantilla {
  id           Int       @id @default(autoincrement())
  id_pregunta  Int
  texto        String    
  valor        String    
  orden        Int
  es_otro      Boolean   @default(false)

  // Relaciones
  pregunta     PreguntaPlantilla @relation(fields: [id_pregunta], references: [id])

  // Índices
  @@index([id_pregunta])
}